Moje wątpliwości jeżeli chodzi o kod i wynikające z tego możliwe niedokładności w wyniku działania algorytmów
1. (warning) Tolerancja dla obydwóch algorytmów rozwiązywania układów równań (TOL, TOLF) powinna być taka sama, jeżeli chce się te algorytmy porównywać (a chcesz)
2. (warning) Określasz pi z pewną dokładnością, ale nie wiadomo czy to nie ma wpływu na osiągnięte wyniki, proponuję dać najlepszą możliwą dokładność, biblioteka math.h posiada zdefiniowane pi z największa możliwą dokładnością dla type double. Przed #include <math.h> musisz dać #define _USE_MATH_DEFINES, w tedy możesz korzystać z M_PI jako stałej pi.
3. (critical!!!) W funkcji LU w wierszu 283 dzieje się dziwna rzecz. Otworz sobie, a pózniej czytaj tu dalej. Patrząc od początku (wiersz 262) tworzysz wektor double* xx, który na obecna chwilę jest pusty, następnie zawartość tego wektora kopiujesz do nowo stworzonego (wiersz 280) wektora X, w wierszu (283), czyli wpisujesz do X niezainicjalizowane double, nie wydaje mi się żeby to były przybliżenia początkowe (według komentarza).
4. (critical!!!) W związku z pkt 3 szukałem gdzie w Thomasie jest przyblizenie początkowe. Okazuje się, że przesyłasz go do AlgorytmThomasa i to jest twoje przyblizenie początkowe wzięte z warunku brzegowego, a do LU nie wysyłasz tego x-a i nie przypisujesz go jako przybliżenie początkowe

Dalej nie ma sensu chyba żebym robił cokolwiek, bo jak pozmieniasz zgodnie z pkt 3 i 4 to dużo się zmieni i prawdopodobnie to jest ten duży błąd, reszta to kosmetyka. Nie mam tutaj niestety żadnego cpp kompilatora, więc nie mam jak takich rzeczy związanych z grubym przechowywaniem w pamięci (a tym bardziej excelem) sprawdzić.
